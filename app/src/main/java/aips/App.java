/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package aips;

import java.io.FileNotFoundException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Map;

public class App {
    public static void main(String[] args) {
        TrafficProcessor processor = new TrafficProcessor();
        TrafficFileReader reader;
        try {
            reader = new TrafficFileReader("/Users/kew/IdeaProjects/aips/sample_input.txt");
        } catch (FileNotFoundException e) {
            throw new RuntimeException(e);
        }
        while(reader.hasNext()) {
            try {
                processor.addSlotTraffic(reader.readNext());
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
        }
        reader.close();
        System.out.println(processor.getTotalCount());
        Map<LocalDate, Long> dailyTraffic = processor.getDailyCounts();
        for (Map.Entry<LocalDate, Long> entry: dailyTraffic.entrySet()) {
            System.out.println(entry.getKey() + " " + entry.getValue());
        }
        List<LocalDateTime> slotsWithMostTraffic =  processor.getSlotsWithMostTraffic();
        for (LocalDateTime slots: slotsWithMostTraffic) {
            System.out.println(slots);
        }
        List<LocalDateTime> threeContiguousSlotsWithLeastTraffic =  processor.getThreeContiguousSlotsWithLeastTraffic();
        for (LocalDateTime slots: threeContiguousSlotsWithLeastTraffic) {
            System.out.println(slots);
        }

    }
}
